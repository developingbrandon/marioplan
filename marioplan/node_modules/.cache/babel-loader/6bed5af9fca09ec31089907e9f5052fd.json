{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\brand\\\\repos\\\\nodejs\\\\net ninja\\\\React-Redux-Firebase\\\\React-Redux-Firebase-App\\\\marioplan\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const createProject = project => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    firestore.collection('projects').add(_objectSpread({}, project, {\n      authorFirstName: 'Brandon',\n      authorLastName: 'Hills',\n      authorId: 1,\n      createdAt: new Date()\n    })).then(() => {\n      dispatch({\n        type: 'CREATE_PROJECT',\n        project\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/brand/repos/nodejs/net ninja/React-Redux-Firebase/React-Redux-Firebase-App/marioplan/src/store/actions/projectActions.js"],"names":["createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","collection","add","authorFirstName","authorLastName","authorId","createdAt","Date","then","type","catch","err"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAIC,OAAD,IAAa;AACtC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD;AAC1D;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,mBACOP,OADP;AAEIQ,MAAAA,eAAe,EAAE,SAFrB;AAGIC,MAAAA,cAAc,EAAE,OAHpB;AAIIC,MAAAA,QAAQ,EAAE,CAJd;AAKIC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AALf,QAMGC,IANH,CAMQ,MAAM;AACVZ,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAE,gBAAR;AAA0Bd,QAAAA;AAA1B,OAAD,CAAR;AACH,KARD,EAQGe,KARH,CAQUC,GAAD,IAAS;AACdf,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA;AAAhC,OAAD,CAAR;AACH,KAVD;AAWH,GAdD;AAeH,CAhBM","sourcesContent":["export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: 'Brandon',\r\n            authorLastName: 'Hills',\r\n            authorId: 1,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}